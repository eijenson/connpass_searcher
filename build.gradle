ext {
    var = ''
}
buildscript {
    ext.kotlin_version = '1.3.61'
    repositories {
        google()
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "http://objectbox.net/beta-repo/" }
        maven { url 'https://maven.fabric.io/public' }

    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.3'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'io.objectbox:objectbox-gradle-plugin:2.5.1'
        classpath 'com.deploygate:gradle:2.1.0'
        classpath 'com.google.gms:google-services:4.3.3'
        classpath "com.github.ben-manes:gradle-versions-plugin:0.27.0"
        classpath "se.patrikerdes:gradle-use-latest-versions-plugin:0.2.11"
        classpath 'io.fabric.tools:gradle:1.31.2'
    }
}
allprojects {
    repositories {
        google()
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "http://objectbox.net/beta-repo/" }
    }
}

apply plugin: 'com.github.ben-manes.versions'
apply plugin: 'se.patrikerdes.use-latest-versions'

task clean(type: Delete) {
    delete rootProject.buildDir
}

tasks.withType(JavaCompile) {
    options.incremental = true
    options.fork = true
}

tasks.withType(Test) {
    def maxCount = gradle.startParameter.maxWorkerCount
    maxParallelForks = (maxCount < 2) ? 1 : maxCount / 2
    forEvery = 100
}

def isNonStable = { String version ->
    def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { it -> version.toUpperCase().contains(it) }
    def regex = /^[0-9,.v-]+(-r)?$/
    return !stableKeyword && !(version ==~ regex)
}

dependencyUpdates {
    gradleReleaseChannel="current"
    outputFormatter="plain,json"
    revision="release"
    rejectVersionIf {
        isNonStable(it.candidate.version)
    }
}